[tool.poetry]
name = "sadie-antibody"
version = "v1.1.2" # run 'sadie --version' to get the current version
license = "MIT"
description = "\"The Complete Antibody Library\""
authors = [
    "Jordan R. Willis <jwillis0720@gmail.com>",
    "Troy Sincomb <troysincomb@gmail.com>",
    "Caleb Kibet <ckibet@iavi.org>",
]
readme = "README.md"
homepage = "https://sadie.jordanrwillis.com"
repository = "https://github.com/jwillis0720/sadie"
keywords = [
    "antibody",
    "bioinformatics",
    "biology",
    "computational biology",
    "protein",
    "immunoinformatics",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Scientific/Engineering :: Bio-Informatics"
]
packages = [{ include = "sadie", from = "src" }]

[tool.poetry.urls]
issues = "https://github.com/jwillis0720/sadie/issues"

[tool.poetry.scripts]
sadie = "sadie.app:sadie"

[tool.poetry.dependencies]
python = ">=3.9,<3.14"
biopython = "^1.84"
click = ">=8.0,<8.2"
filetype = "^1.2.0"
pandas = ">=2.3,<3"
requests = "^2.32.0"
pydantic = ">=2.0.0,<3.0.0"
python-Levenshtein = "^0.27.0"
pyarrow = "^20.0.0"
semantic-version = "^2.10.0"
PyYAML = "^6.0"
scikit-learn = "^1.5.0"
openpyxl = "^3.1.0"
yarl = "^1.9.0"
ipython = "^8.18.0"
pyhmmer = "^0.10.14"
scipy = "^1.11.0"
rich = "^14.1.0"

[tool.poetry.group.dev.dependencies]
pytest = ">=8.0.0"
flake8 = "^7.0.0"
pre-commit = "^3.6.0"
coverage = "^7.0"
airr = "^1.5.0"
black = "^24.0.0"
pyinstrument = "^4.6.0"
types-PyYAML = "^6.0.12"
pandas-stubs = "^2.1.0"
types-requests = "^2.31.0"
mkdocs = "^1.5.0"
mkdocs-material = "^9.5.0"
mkdocs-material-extensions = "^1.3.0"
mkdocs-git-revision-date-plugin = "^0.3.2"
mkdocs-redirects = "^1.2.0"
markdown-include = "^0.8.0"
mdx-include = "^1.4.2"
Jinja2 = "^3.1.0"
mypy = "^1.8.0"
bump2version = "^1.0.1"
Markdown = "^3.5.0"
pyright = "^1.1.350"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# ------------------------------------------------ External Tools ------------------------------------------------ #
[[tool.poetry_bumpversion.replacements]]
files = ["src/sadie/__init__.py"]
search = '__version__ = "{current_version}"'
replace = '__version__ = "{new_version}"'

[tool.black]
line-length = 120
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  | tests/
  | coverage/
  | profiling/
  | src/Bio/
)/
'''

[tool.flake8]
defaultsignore = "B008"

[tool."pylint.MASTER"]
extension-pkg-whitelist = "pydantic"

[tool.coverage.run]
source = ["sadie"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/site-packages/*",
    # Exclude C extension modules that might cause segfaults
    "*/pyhmmer/*",
    "*/scipy/*",
    "*/numpy/*",
    "*/pandas/*",
    "*/sklearn/*",
    "*/Bio/*",
]
# Use pure Python tracer to avoid C extension conflicts
# Can be overridden with COVERAGE_CORE env var
concurrency = ["thread"]
parallel = false
sigterm = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]
precision = 2
skip_covered = false
skip_empty = true

[tool.coverage.html]
directory = "coverage/reports/html/"

[tool.coverage.xml]
output = "coverage/reports/xml/coverage.xml"

[tool.pyright]
include = ["src"]
exclude = ["tests", "coverage", "src/Bio"]
reportMissingTypeStubs = false
reportUnkownVariableType = false
reportOptionalIterable = false
# private imports should be allowed. ignore it
reportPrivateImportUsage = false
# TODO: mostly pandas and unknown lists being used
reportGeneralTypeIssues = false
# TODO: list of Nones being used -- should fix this logic
reportOptionalSubscript = false
# TODO: operations being done on list of Nones -- should fix this logic
reportOptionalOperand = false
# TODO: old anacri code using short one time variables
reportUnboundVariable = false
reportMissingImports = false  # TODO: should move biopythn 1.79 dep into own folder
reportArgumentType = false  # TODO: many 3rd party functions have no type hints
reportCallIssue = false  # TODO: many 3rd party functions have no type hints
reportOperatorIssue = false  # TODO: many 3rd party functions have no type hints
reportReturnType = false  # TODO: many 3rd party functions have no type hints

[tool.isort]
profile = "black"
known_third_party = ["Bio"]
