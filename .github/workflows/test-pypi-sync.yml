name: Test Version Sync (Dry Run)

on:
  workflow_dispatch:  # Manual trigger for testing
  pull_request:
    branches: [main]
    types: [opened, synchronize]  # Run on PR updates

jobs:
  test-version-sync:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: "0"

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          pip install poetry

      - name: Test Version Sync Logic
        run: |
          echo "=== Current State ==="
          echo "pyproject.toml version: $(poetry version -s)"

          if git describe --tags --abbrev=0 2>/dev/null; then
            LATEST_TAG=$(git describe --tags --abbrev=0)
            TAG_VERSION=${LATEST_TAG#v}
            echo "Latest git tag: $LATEST_TAG (version: $TAG_VERSION)"

            CURRENT_VERSION=$(poetry version -s)

            if [ "$CURRENT_VERSION" != "$TAG_VERSION" ]; then
              echo "❌ Version mismatch detected!"
              echo "Would sync to: $TAG_VERSION"

              # Test the poetry version command (without actually running it)
              echo "Would run: poetry version $TAG_VERSION"
            else
              echo "✅ Versions are already in sync"
            fi
          else
            echo "No tags found"
          fi

      - name: Simulate Tag Creation
        run: |
          echo "=== Simulating tag creation ==="
          CURRENT_VERSION=$(poetry version -s)
          NEXT_VERSION=$(echo $CURRENT_VERSION | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
          echo "Current version: $CURRENT_VERSION"
          echo "Next version would be: $NEXT_VERSION"
          echo "Would create tag: v$NEXT_VERSION"

      - name: Check Files That Would Change
        run: |
          echo "=== Files that would be modified ==="
          echo "- pyproject.toml"
          echo "- src/sadie/__init__.py (if it contains version string)"

          # Show current version strings in files
          echo ""
          echo "Current version in pyproject.toml:"
          grep "^version = " pyproject.toml || echo "Version line not found"

          if [ -f "src/sadie/__init__.py" ]; then
            echo ""
            echo "Current version in __init__.py:"
            grep -E "__version__|version" src/sadie/__init__.py || echo "No version string found"
          fi
